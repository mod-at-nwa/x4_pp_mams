<mdscript name="pp_mams" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd" version="1">
  <params>
    <param name="notify" type="boolean" default="true" desc="Notification on assignment"/>
    <param name="logbook" type="boolean" default="true" desc="Assignment in Logbook"/>
  </params>
  <cues>
    <!-- Initialization cue -->
    <cue name="Init" instantiate="true">
      <conditions>
        <event_game_loaded />
      </conditions>
      <actions>
        <debug_text text="'=== PP MAMS: MOD LOADING START ==='" />
        <debug_text text="'PP MAMS: Mod loaded and initialized successfully!'" />
        <debug_text text="'PP MAMS: Init cue executed - version 1.15'" />

        <!-- Initialize global variables -->
        <set_value name="global.$pp_mams_enabled" exact="true" />
        <set_value name="global.$pp_mams_debug" exact="true" />

        <show_notification caption="'PP MAMS Loaded'" text="'PP MAMS mod is now active!'" />
        <write_to_logbook category="general" title="'PP MAMS Loaded'" text="'PP MAMS: Pilot Personnel Merit Assignment Management System loaded and ready.'" />
        <debug_text text="'=== PP MAMS: MOD LOADING COMPLETE ==='" />
      </actions>
    </cue>

    <!-- Periodic Ship Monitoring System -->
    <cue name="PeriodicShipCheck" instantiate="true">
      <conditions>
        <event_game_loaded />
      </conditions>
      <actions>
        <debug_text text="'PP MAMS: Starting periodic ship monitoring system'" />
        <signal_cue cue="DelayedStart" />
      </actions>
      <cues>
        <cue name="DelayedStart">
          <conditions>
            <event_cue_signalled />
          </conditions>
          <delay exact="1s" />
          <actions>
            <signal_cue cue="CheckTimer" />
          </actions>
        </cue>
        <cue name="CheckTimer" instantiate="true">
          <conditions>
            <event_cue_signalled />
          </conditions>
          <delay exact="30s" />
          <actions>
            <debug_text text="'PP MAMS: Periodic check - scanning fleet for pilot optimization'" />
            <find_object_component name="$player_ships" object="player.galaxy" class="ship" owner="faction.player" space="player.galaxy" />

            <do_all exact="$player_ships.count" counter="$i">
              <set_value name="$ship" exact="$player_ships.{$i}" />

              <!-- Check if ship needs a pilot or has a suboptimal one -->
              <do_if value="not $ship.pilot.exists or $ship.pilot.skill.piloting lt 3">
                <debug_text text="'PP MAMS: Found ship needing better pilot: ' + $ship.knownname" />
                <signal_cue cue="ProcessShipForPilotAssignment" param="$ship" />
              </do_if>

              <!-- Check for very poor pilots that should be fired -->
              <do_elseif value="$ship.pilot.exists and $ship.pilot.skill.piloting lt 2">
                <debug_text text="'PP MAMS: Found underperforming pilot that should be fired: ' + $ship.knownname" />
                <signal_cue cue="FireUnderperformingPilot" param="$ship" />
              </do_elseif>
            </do_all>

            <signal_cue_instantly cue="CheckTimer" />
          </actions>
        </cue>
      </cues>
    </cue>

    <!-- Note: X4 doesn't have event_object_pilot_changed, so we rely on ship acquisition events -->

    <!-- Main Processing Logic -->
    <cue name="ProcessShipForPilotAssignment">
      <conditions>
        <event_cue_signalled />
      </conditions>
      <actions>
        <set_value name="$ship" exact="event.param" />
        <debug_text text="'PP MAMS: Processing ship for pilot assignment: ' + $ship.knownname" />

        <!-- Check if ship exists and is valid -->
        <do_if value="$ship.exists and $ship.isclass.ship">
          <!-- Get ship purpose -->
          <set_value name="$ship_purpose" exact="$ship.primarypurpose" />
          <debug_text text="'PP MAMS: Ship purpose: ' + $ship_purpose" />

          <!-- Branch based on ship type -->
          <do_if value="$ship_purpose == purpose.fight">
            <debug_text text="'PP MAMS: Battle ship detected - searching for best pilot'" />
            <signal_cue cue="AssignBestPilotToBattleShip" param="$ship" />
          </do_if>
          <do_else>
            <debug_text text="'PP MAMS: Non-combat ship detected - searching PHQ crew'" />
            <signal_cue cue="AssignBestCrewToNonCombatShip" param="$ship" />
          </do_else>
        </do_if>
        <do_else>
          <debug_text text="'PP MAMS: Invalid ship object received'" />
        </do_else>
      </actions>
    </cue>

    <!-- Battle Ship Pilot Assignment -->
    <cue name="AssignBestPilotToBattleShip">
      <conditions>
        <event_cue_signalled />
      </conditions>
      <actions>
        <set_value name="$ship" exact="event.param" />
        <set_value name="$current_pilot" exact="$ship.pilot" />
        <set_value name="$current_skill" exact="0" />

        <!-- Get current pilot skill -->
        <do_if value="$current_pilot.exists">
          <set_value name="$current_skill" exact="$current_pilot.skill.piloting" />
          <debug_text text="'PP MAMS: Current pilot skill: ' + $current_skill" />
        </do_if>
        <do_else>
          <debug_text text="'PP MAMS: No current pilot on ship'" />
        </do_else>

        <!-- Initialize best candidate variables -->
        <set_value name="$best_pilot" exact="null" />
        <set_value name="$best_ship" exact="null" />
        <set_value name="$best_skill" exact="$current_skill" />

        <!-- Search through all player ships for better pilots on non-combat vessels -->
        <debug_text text="'PP MAMS: Searching player fleet for better pilots...'" />
        <find_object_component name="$player_ships" object="player.galaxy" class="ship" owner="faction.player" space="player.galaxy" />

        <do_all exact="$player_ships.count" counter="$i">
          <set_value name="$candidate_ship" exact="$player_ships.{$i}" />

          <!-- Skip if it's the same ship -->
          <do_if value="$candidate_ship != $ship">
            <!-- Check if it's a non-combat ship -->
            <do_if value="$candidate_ship.primarypurpose != purpose.fight">
              <set_value name="$candidate_pilot" exact="$candidate_ship.pilot" />

              <do_if value="$candidate_pilot.exists">
                <set_value name="$candidate_skill" exact="$candidate_pilot.skill.piloting" />
                <debug_text text="'PP MAMS: Found pilot on ' + $candidate_ship.knownname + ' with skill: ' + $candidate_skill" />

                <!-- Check if this pilot is better -->
                <do_if value="$candidate_skill gt $best_skill">
                  <set_value name="$best_pilot" exact="$candidate_pilot" />
                  <set_value name="$best_ship" exact="$candidate_ship" />
                  <set_value name="$best_skill" exact="$candidate_skill" />
                  <debug_text text="'PP MAMS: New best candidate found with skill: ' + $best_skill" />
                </do_if>
              </do_if>
            </do_if>
          </do_if>
        </do_all>

        <!-- Perform assignment if we found a better pilot -->
        <do_if value="$best_pilot.exists and $best_ship.exists">
          <debug_text text="'PP MAMS: Assigning better pilot to battle ship'" />
          <signal_cue cue="PerformPilotSwap" param="[$ship, $best_ship, $best_pilot, $current_pilot]" />
        </do_if>
        <do_else>
          <debug_text text="'PP MAMS: No better pilot found for battle ship'" />
        </do_else>
      </actions>
    </cue>

    <!-- Non-Combat Ship Crew Assignment -->
    <cue name="AssignBestCrewToNonCombatShip">
      <conditions>
        <event_cue_signalled />
      </conditions>
      <actions>
        <set_value name="$ship" exact="event.param" />
        <set_value name="$current_pilot" exact="$ship.pilot" />
        <set_value name="$current_skill" exact="0" />

        <!-- Get current pilot skill -->
        <do_if value="$current_pilot.exists">
          <set_value name="$current_skill" exact="$current_pilot.skill.piloting" />
          <debug_text text="'PP MAMS: Current pilot skill: ' + $current_skill" />
        </do_if>
        <do_else>
          <debug_text text="'PP MAMS: No current pilot on ship'" />
        </do_else>

        <!-- Check for PHQ -->
        <set_value name="$phq" exact="player.headquarters" />
        <do_if value="$phq.exists">
          <debug_text text="'PP MAMS: PHQ found, searching crew...'" />

          <!-- Initialize best candidate variables -->
          <set_value name="$best_crew" exact="null" />
          <set_value name="$best_skill" exact="$current_skill" />

          <!-- Search PHQ crew for better candidates -->
          <do_all exact="$phq.people.count" counter="$i">
            <set_value name="$candidate_crew" exact="$phq.people.{$i}" />

            <!-- Check if crew member is available (service crew) -->
            <do_if value="$candidate_crew.combinedskill gt 0">
              <set_value name="$candidate_skill" exact="$candidate_crew.skill.piloting" />

              <do_if value="$candidate_skill gt $best_skill">
                <set_value name="$best_crew" exact="$candidate_crew" />
                <set_value name="$best_skill" exact="$candidate_skill" />
                <debug_text text="'PP MAMS: Found better crew member with skill: ' + $best_skill" />
              </do_if>
            </do_if>
          </do_all>

          <!-- Assign better crew if found -->
          <do_if value="$best_crew.exists">
            <debug_text text="'PP MAMS: Promoting crew to pilot on non-combat ship'" />
            <signal_cue cue="PromoteCrewToPilot" param="[$ship, $best_crew, $current_pilot]" />
          </do_if>
          <do_else>
            <debug_text text="'PP MAMS: No better crew found in PHQ'" />
          </do_else>
        </do_if>
        <do_else>
          <debug_text text="'PP MAMS: No PHQ found - skipping crew search'" />
        </do_else>
      </actions>
    </cue>

    <!-- Pilot Swap Implementation -->
    <cue name="PerformPilotSwap">
      <conditions>
        <event_cue_signalled />
      </conditions>
      <actions>
        <set_value name="$target_ship" exact="event.param.{1}" />
        <set_value name="$source_ship" exact="event.param.{2}" />
        <set_value name="$new_pilot" exact="event.param.{3}" />
        <set_value name="$old_pilot" exact="event.param.{4}" />

        <debug_text text="'PP MAMS: Performing pilot swap'" />

        <!-- Store pilots for reassignment -->
        <set_value name="$source_pilot" exact="$source_ship.pilot" />
        <set_value name="$target_pilot" exact="$target_ship.pilot" />

        <!-- Assign new pilot to target ship -->
        <assign_control_entity object="$target_ship" actor="$new_pilot" post="controlpost.aipilot" transfer="true" />

        <!-- Assign source ship pilot (if exists) to source ship, otherwise assign old pilot -->
        <do_if value="$source_ship.exists">
          <do_if value="$target_pilot.exists">
            <assign_control_entity object="$source_ship" actor="$target_pilot" post="controlpost.aipilot" transfer="true" />
          </do_if>
        </do_if>

        <!-- User feedback -->
        <signal_cue cue="NotifyPilotAssignment" param="[$target_ship, $new_pilot, $new_pilot.skill.piloting]" />
      </actions>
    </cue>

    <!-- Crew Promotion Implementation -->
    <cue name="PromoteCrewToPilot">
      <conditions>
        <event_cue_signalled />
      </conditions>
      <actions>
        <set_value name="$ship" exact="event.param.{1}" />
        <set_value name="$new_pilot" exact="event.param.{2}" />
        <set_value name="$old_pilot" exact="event.param.{3}" />

        <debug_text text="'PP MAMS: Promoting crew member to pilot'" />

        <!-- Assign new pilot (this automatically removes the old pilot) -->
        <assign_control_entity object="$ship" actor="$new_pilot" post="controlpost.aipilot" transfer="true" />

        <!-- User feedback -->
        <signal_cue cue="NotifyPilotAssignment" param="[$ship, $new_pilot, $new_pilot.skill.piloting]" />
      </actions>
    </cue>

    <!-- User Notification System -->
    <cue name="NotifyPilotAssignment">
      <conditions>
        <event_cue_signalled />
      </conditions>
      <actions>
        <set_value name="$ship" exact="event.param.{1}" />
        <set_value name="$pilot" exact="event.param.{2}" />
        <set_value name="$skill" exact="event.param.{3}" />

        <set_value name="$message" exact="'Pilot assigned to ' + $ship.knownname + ': ' + $pilot.knownname + ' (Skill: ' + $skill + ')'" />

        <!-- Show notification if enabled -->
        <do_if value="$notify">
          <show_notification caption="'PP MAMS Assignment'" text="$message" />
        </do_if>

        <!-- Write to logbook if enabled -->
        <do_if value="$logbook">
          <write_to_logbook category="general" title="'PP MAMS Assignment'" text="$message" />
        </do_if>

        <debug_text text="'PP MAMS: ' + $message" />
      </actions>
    </cue>

    <!-- Fire Underperforming Pilot -->
    <cue name="FireUnderperformingPilot">
      <conditions>
        <event_cue_signalled />
      </conditions>
      <actions>
        <set_value name="$ship" exact="event.param" />
        <set_value name="$pilot" exact="$ship.pilot" />

        <debug_text text="'PP MAMS: Firing underperforming pilot from ' + $ship.knownname" />

        <do_if value="$pilot.exists">
          <set_value name="$pilot_name" exact="$pilot.knownname" />
          <set_value name="$pilot_skill" exact="$pilot.skill.piloting" />

          <!-- Remove the pilot using the correct dismiss_pilot action -->
          <dismiss_pilot object="$ship" />

          <!-- User feedback for firing -->
          <set_value name="$message" exact="'Fired underperforming pilot from ' + $ship.knownname + ': ' + $pilot_name + ' (Skill: ' + $pilot_skill + ')'" />

          <!-- Show notification if enabled -->
          <do_if value="$notify">
            <show_notification caption="'PP MAMS Dismissal'" text="$message" />
          </do_if>

          <!-- Write to logbook if enabled -->
          <do_if value="$logbook">
            <write_to_logbook category="general" title="'PP MAMS Dismissal'" text="$message" />
          </do_if>

          <debug_text text="'PP MAMS: ' + $message" />

          <!-- Try to assign a better pilot immediately -->
          <signal_cue cue="ProcessShipForPilotAssignment" param="$ship" />
        </do_if>
        <do_else>
          <debug_text text="'PP MAMS: No pilot to fire on ship: ' + $ship.knownname" />
        </do_else>
      </actions>
    </cue>

    <!-- Manual Pilot Firing Trigger -->
    <cue name="ManualFirePilot" instantiate="true">
      <conditions>
        <event_object_signalled object="player.entity" param2="'pp_mams_fire'" />
      </conditions>
      <actions>
        <set_value name="$ship" exact="event.param" />
        <debug_text text="'PP MAMS: Manual pilot firing triggered for ' + $ship.knownname" />
        <signal_cue cue="FireUnderperformingPilot" param="$ship" />
      </actions>
    </cue>

    <!-- Manual Test Trigger (for debugging) -->
    <cue name="ManualTestTrigger" instantiate="true">
      <conditions>
        <event_object_signalled object="player.entity" param="'pp_mams_test'" />
      </conditions>
      <actions>
        <debug_text text="'PP MAMS: Manual test triggered - forcing immediate fleet scan'" />
        <signal_cue_instantly cue="PeriodicShipCheck.CheckTimer" />
      </actions>
    </cue>

    <!-- Pilot Communication Enhancement -->
    <cue name="PilotCommunicationHandler" instantiate="true">
      <conditions>
        <event_conversation_started actor="md.Setup.PlayerCharacterRepresentative" />
      </conditions>
      <actions>
        <set_value name="$pilot" exact="event.param2" />
        <set_value name="$ship" exact="$pilot.ship" />

        <!-- Check if this is a player pilot on a player ship -->
        <do_if value="$pilot.exists and $ship.exists and $ship.owner == faction.player and $pilot.controlpost == controlpost.aipilot">
          <debug_text text="'PP MAMS: Player communicating with pilot ' + $pilot.knownname + ' on ' + $ship.knownname" />

          <!-- Add PP MAMS management options to pilot conversation -->
          <add_player_choice_sub text="'[PP MAMS] Request pilot reassignment for this ship'" section="pp_mams_reassign_pilot" />
          <add_player_choice_sub text="'[PP MAMS] Request skill assessment'" section="pp_mams_pilot_assessment" />
          <add_player_choice_sub text="'[PP MAMS] Optimize entire fleet assignments'" section="pp_mams_fleet_optimize" />
        </do_if>
      </actions>

      <cues>
        <!-- Reassign Pilot Option -->
        <cue name="ReassignPilot">
          <conditions>
            <event_conversation_returned_to_section section="pp_mams_reassign_pilot" />
          </conditions>
          <actions>
            <set_value name="$pilot" exact="event.param2" />
            <set_value name="$ship" exact="$pilot.ship" />

            <debug_text text="'PP MAMS: Player requested reassignment for ship ' + $ship.knownname" />

            <!-- Add confirmation dialogue -->
            <add_conversation_view text="'I understand. The personnel management system will evaluate if there is a better assignment for this ship and for me. Shall I proceed?'" speaker="other" />
            <add_player_choice text="'Yes, initiate reassignment analysis.'" position="1" section="pp_mams_confirm_reassign" />
            <add_player_choice text="'No, maintain current assignment.'" position="2" section="pp_mams_cancel_reassign" />
          </actions>
        </cue>

        <!-- Confirm Reassignment -->
        <cue name="ConfirmReassignPilot">
          <conditions>
            <event_conversation_returned_to_section section="pp_mams_confirm_reassign" />
          </conditions>
          <actions>
            <set_value name="$pilot" exact="event.param2" />
            <set_value name="$ship" exact="$pilot.ship" />

            <debug_text text="'PP MAMS: Player confirmed reassignment for ship ' + $ship.knownname" />

            <!-- Trigger the assignment system for this specific ship -->
            <signal_cue cue="parent.parent.ProcessShipForPilotAssignment" param="$ship" />

            <add_conversation_view text="'Assignment analysis initiated. If a better pilot is found, we will handle the transition seamlessly. Thank you.'" speaker="other" />
            <end_conversation />
          </actions>
        </cue>

        <!-- Cancel Reassignment -->
        <cue name="CancelReassignPilot">
          <conditions>
            <event_conversation_returned_to_section section="pp_mams_cancel_reassign" />
          </conditions>
          <actions>
            <add_conversation_view text="'Understood. I will continue in my current role. Please let me know if you need anything else.'" speaker="other" />
            <!-- Return to main conversation -->
          </actions>
        </cue>

        <!-- Pilot Assessment Option -->
        <cue name="PilotAssessment">
          <conditions>
            <event_conversation_returned_to_section section="pp_mams_pilot_assessment" />
          </conditions>
          <actions>
            <set_value name="$pilot" exact="event.param2" />
            <set_value name="$ship" exact="$pilot.ship" />
            <set_value name="$skill" exact="$pilot.skill.piloting" />
            <set_value name="$combat" exact="$pilot.skill.combat" />
            <set_value name="$combined" exact="$pilot.combinedskill" />

            <debug_text text="'PP MAMS: Player requested assessment from pilot ' + $pilot.knownname" />

            <!-- Generate skill-based response -->
            <do_if value="$skill ge 4">
              <set_value name="$response" exact="'I am highly experienced with a piloting skill of ' + $skill + ' and combat rating of ' + $combat + '. I perform well in any assignment.'" />
            </do_if>
            <do_elseif value="$skill ge 3">
              <set_value name="$response" exact="'I have good experience with piloting skill ' + $skill + ' and combat rating ' + $combat + '. I am effective in most situations.'" />
            </do_elseif>
            <do_elseif value="$skill ge 2">
              <set_value name="$response" exact="'I have moderate skills - piloting ' + $skill + ', combat ' + $combat + '. I do my best but recognize I could improve.'" />
            </do_elseif>
            <do_else>
              <set_value name="$response" exact="'I admit my skills are limited - piloting ' + $skill + ', combat ' + $combat + '. Perhaps I would serve better elsewhere until I improve.'" />
            </do_else>

            <add_conversation_view text="$response" speaker="other" />

            <!-- Write assessment to logbook -->
            <write_to_logbook category="general" title="'PP MAMS Pilot Assessment'" text="'Pilot ' + $pilot.knownname + ' on ' + $ship.knownname + ': Piloting ' + $skill + ', Combat ' + $combat + ', Combined ' + $combined" />
          </actions>
        </cue>

        <!-- Fleet Optimization Option -->
        <cue name="FleetOptimization">
          <conditions>
            <event_conversation_returned_to_section section="pp_mams_fleet_optimize" />
          </conditions>
          <actions>
            <debug_text text="'PP MAMS: Player requested full fleet optimization via pilot conversation'" />

            <add_conversation_view text="'Initiating comprehensive fleet pilot optimization. This will analyze all ships and reassign pilots for maximum efficiency. Proceed?'" speaker="other" />
            <add_player_choice text="'Yes, optimize the entire fleet.'" position="1" section="pp_mams_confirm_fleet_optimize" />
            <add_player_choice text="'No, cancel optimization.'" position="2" section="pp_mams_cancel_fleet_optimize" />
          </actions>
        </cue>

        <!-- Confirm Fleet Optimization -->
        <cue name="ConfirmFleetOptimization">
          <conditions>
            <event_conversation_returned_to_section section="pp_mams_confirm_fleet_optimize" />
          </conditions>
          <actions>
            <debug_text text="'PP MAMS: Player confirmed full fleet optimization'" />

            <add_conversation_view text="'Fleet-wide optimization commencing. All pilots will be evaluated and reassigned for optimal performance. This may take a moment.'" speaker="other" />

            <!-- Trigger immediate fleet scan -->
            <signal_cue_instantly cue="parent.parent.PeriodicShipCheck.CheckTimer" />

            <add_conversation_view text="'Optimization complete. Check your logbook and notifications for assignment changes.'" speaker="other" />
            <end_conversation />
          </actions>
        </cue>

        <!-- Cancel Fleet Optimization -->
        <cue name="CancelFleetOptimization">
          <conditions>
            <event_conversation_returned_to_section section="pp_mams_cancel_fleet_optimize" />
          </conditions>
          <actions>
            <add_conversation_view text="'Fleet optimization cancelled. Current assignments will remain unchanged.'" speaker="other" />
            <!-- Return to main conversation -->
          </actions>
        </cue>
      </cues>
    </cue>

  </cues>
</mdscript>